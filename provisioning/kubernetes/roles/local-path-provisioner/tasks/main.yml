---

- name: Ensures project_config_dir exists
  file:
    path: "{{ project_config_dir }}"
    state: directory
    owner: "{{ install_user }}"
    group: "{{ install_user }}"
    mode: '0755'

- name: Copy config file over
  copy:
    src: local-path-provisioner.yml
    dest: "{{ project_config_dir }}/local-path-provisioner.yml"
    owner: "{{ install_user }}"
    group: "{{ install_user }}"
    mode: '0644'

# - name: Apply local-path-provisioner
#   k8s:
#     state: present
#     src: "{{ project_config_dir }}/local-path-provisioner.yml"
#   become: yes
#   become_user: "{{ install_user }}"

# - name: Apply local-path-provisioner
#   shell: >
#     KUBECONFIG=$(kind get kubeconfig-path) kubectl apply -f {{ project_config_dir }}/local-path-provisioner.yml
#   changed_when: false
#   become: yes
#   become_user: "{{ install_user }}"

- name: Clone local-path-provisioner repo
  git:
    repo: https://github.com/rancher/local-path-provisioner.git
    dest: "{{ project_config_dir }}/local-path-provisioner"

- name: Install local-path-provisioner
  shell: >
    helm install {{ project_config_dir }}/local-path-provisioner/deploy/chart/ --name local-path-storage --namespace {{ namespace }} --tiller-namespace {{ helm_tiller_namespace }}
  changed_when: false
  become: yes
  become_user: "{{ install_user }}"

- name: Wait for control-plane pods become ready
  shell: >
    KUBECONFIG=$(kind get kubeconfig-path) kubectl wait --namespace {{ namespace }} --for=condition=Ready pods --all --timeout=600s
  changed_when: false
  become: yes
  become_user: "{{ install_user }}"

- name: unset storageclass standard as default
  shell: >
    KUBECONFIG=$(kind get kubeconfig-path) kubectl patch storageclass standard -p '{"metadata": {"annotations":{"storageclass.beta.kubernetes.io/is-default-class":"false"}}}'
  changed_when: false
  become: yes
  become_user: "{{ install_user }}"
